package problems1to10;
/***
 * Even Fibonacci numbers
 * 
 * Problem 2
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5,
 * 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequence
 * whose values do not exceed four million, find the sum of the even-valued
 * terms.
 * 
 ***/

public class Problem2 {

	public static void main(String[] args) {
		// Time computation
		final long startTime = System.nanoTime();

		// Program
		int sum = 0, fib1 = 1, fib2 = 2, swap;

		while (fib2 < 4000000) {

			if (fib2 % 2 == 0)
				sum += fib2;

			swap = fib2;
			fib2 = fib1 + fib2;
			fib1 = swap;
		}

		System.out.println(sum);

		// Time computation
		final long duration = System.nanoTime() - startTime;
		System.out.println("Time: " + duration + " ns");
	}

}